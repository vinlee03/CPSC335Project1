function swapping(row) {
  console.log(
    "Connecting pairs of persons by changing seating arrangements in row: ",
    row
  );
  // Initialize noSwaps to count the number of swaps performed
  noSwaps = 0;

  // Loop over the people sitting in the rows left to right, finding their match, person B, save for the last person
  for (i = 0; i < row.length - 2; i++) {
    // If a person A's match (that is, person B) is right next to them, skip them
    if (Math.abs(row[i] - row[i + 1]) == 1) {
      i += 2;
    }

    // For each person A sitting in the rows left to right (save the last person), loop over the entire array to find their match
    for (j = i + 1; j < row.length - 1; j++) {
      // If a person A's match is found (who cannot be right next to them), the person to the right of person A and person B should swap places
      if (Math.abs(row[i] - row[j]) == 1 && Math.abs(i - j) != 1) {
        // Print the array prior to the swap
        console.log("Before swap:", row);

        // Increment the swap count
        noSwaps++;

        // The rightmost person and the match swip places
        temp = row[i + 1];
        row[i + 1] = row[j];
        row[j] = temp;

        // Print the array after the swap
        console.log("After swap:", row);
        // Exit inner loop once a swap is done: move on to the next person who needs a match
        break;
      }
    }
  }

  // Print the total number of swaps made
  console.log("Total swaps:", noSwaps);
  // Print the final state of the array
  console.log("Final array:", row);
  return noSwaps;
}

row = [0, 2, 1, 3];
console.log(swapping(row));

row = [3, 2, 0, 1];
console.log(swapping(row));

row = [1, 0, 3, 2];
console.log(swapping(row));

row = [4, 0, 2, 5, 3, 1];
console.log(swapping(row));

row = [5, 4, 0, 1, 3, 2];
console.log(swapping(row));
