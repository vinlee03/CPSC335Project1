function swapping(row) {
  // Initialize noSwaps to count the number of swaps performed
  noSwaps = 0;

  // if two adjacent are couples, then skip them

  // Loop over the first element of each couple
  for (i = 0; i < row.length - 2; i++) {
    // If the two adjacent elements are couples, skip them
    if (Math.abs(row[i] - row[i + 1]) == 1) {
      i += 2;
    }

    // Loop over the entire array to find the second element of each couple
    for (j = i + 1; j < row.length - 1; j++) {
      // if they are couples, then swap element i+1 and j
      if (Math.abs(row[i] - row[j]) == 1 && Math.abs(i - j) != 1) {
        // Print the current couple indices (i, j), and the values to be swapped
        console.log("Indices:", i, j, "Values:", row[i + 1], row[j]);
        console.log("Before swap:", row);

        // Increment the swap count
        noSwaps++;

        // Swap row[i + 1] and row[j]
        temp = row[i + 1];
        row[i + 1] = row[j];
        row[j] = temp;

        // Print the array after the swap
        console.log("After swap:", row);
        // Exit inner loop once a swap is done
        break;
      }
    }
  }

  // Print the total number of swaps made
  console.log("Total swaps:", noSwaps);
  // Print the final state of the array
  console.log("Final array:", row);
  console.log("\n");
}

row = [0, 2, 1, 3];
swapping(row);

row = [3, 2, 0, 1];
swapping(row);

row = [1, 0, 3, 2];
swapping(row);

row = [4, 0, 2, 5, 3, 1];
swapping(row);

row = [5, 4, 0, 1, 3, 2];
swapping(row);
